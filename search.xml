<?xml version="1.0" encoding="utf-8"?>
<search>
  
    
    <entry>
      <title><![CDATA[Windows部署TensorFlow]]></title>
      <url>%2F2017%2F03%2F08%2FWindows%E9%83%A8%E7%BD%B2TensorFlow%2F</url>
      <content type="text"><![CDATA[CPU版TensorFlowCPU版的TensorFlow都很简单，参见上次的教程 GPU版TensorFlow####1.下载GPU依赖库PS:首先你要有Nvida的显卡哦！ 需要用到的链接安装顺序由上到下：# Anaconda安装，选择py3.5版本(目前2.7不行)https://www.continuum.io/downloads# cuda安装(这个下载很慢)https://developer.nvidia.com/cuda-downloads# cudnn下载就好，不用安装，但要配置环境变量https://developer.nvidia.com/cudnn 安装Anaconda前可以把你原来的Python卸载了，Anaconda自带Python。 前两个Anaconda和cuda都是exe安装包，一路点下一步就能安装。 最后一个cudnn需要像我这样配置一下环境变量：此电脑=&gt;高级系统设置=&gt;高级=&gt;环境变量=&gt;系统变量找到path那个变量向其中添加cudnn的路径。 在此，TF依赖库安装完成！ ####2.下载安装TF直接调出CMD然后输入1pip install --ignore-installed --upgrade tensorflow-gpu 稍等几分钟就能用啦！ ####3.测试TFCMD进入Python1&gt;&gt;&gt; import tensorflow as tf 如果正常运行就好啦！]]></content>
    </entry>

    
    <entry>
      <title><![CDATA[基于HEXO搭建个人博客]]></title>
      <url>%2F2017%2F03%2F02%2F%E5%9F%BA%E4%BA%8EHEXO%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2%2F</url>
      <content type="text"><![CDATA[什么是 Hexo？Hexo 是一个快速、简洁且高效的博客框架。Hexo 使用 Markdown（或其他渲染引擎）解析文章，在几秒内，即可利用靓丽的主题生成静态网页。 首先附上官方链接 我查阅了很多资料，但由于每个人版本不同，有各种坑，然后根据我自己遇到的坑总结以下经验： 开始在安装前，您必须检查电脑中是否已安装下列应用程序： Node.jsGit 附上目前最新3.1.0版本的Node.js下载路径以及NodeJS官网 Git就自己去下载啦，windows就去官网下载，在Mac电脑的终端里面输入git回车，他就会自动下载啦！ 下载完后：调出命令行，执行下面命令安装hexo：1sudo npm install hexo -g #这一步有点慢 然后就可以初始化你的博客啦，nodejs是一个自动生成H5代码的工具，所以可以自动生成代码，真的很方便，让我一天就搭建好博客啦！ 首先找到本地存放博客代码的文件夹，用一下代码初始化它： 1sudo hexo init 目录名 然后你可以这样操作来看看这个博客最初始的状态：12hexo g #生成静态页面hexo s #开启本地服务器 然后你如果看到这样的页面，就说明你以上的操作都成功啦！ next主题但是明显这个主题有点丑。。于是我找到了next主题,附上下载地址以及NEXT官网。 下载next后，将其放在themes文件夹里面，然后在站点配置文件里改一下主题theme: next。 123hexo clean #清除上次生成的静态页面hexo g #生成静态页面hexo s #开启本地服务器 这样就可以看到好看的NEXT主题啦！ 在此声明一下：你会发现两个配置文件都叫_config.yml，在此规定theme里面的叫主题配置文件，外面第一个_config.yml叫站点配置文件。 部署到服务器最新的hexo真的很方便，不用配置ssh就能记住用户密码啦！只用在站点配置文件最后添加一下配置信息如下： 123456deploy: type: git repo: GitHub: https://github.com/Silencezjl/Silencezjl.github.io.git Coding: https://git.coding.net/Silencezjl/Silencezjl.git branch: master 我这里同时部署到啦github和coding，一个是国外一个是国内，你只写一个也行。 特别注意的是：配置文件的冒号后面一调要有空格！！！！ 然后你就可以通过：1hexo new &quot;文章名字&quot; #新建文章来写文章，可以下载一个Markdown编辑器哦！ 插件NEXT官网提供了所有插件的安装方式，点我传送。 在此我就不赘述啦，Have Fun！]]></content>
    </entry>

    
    <entry>
      <title><![CDATA[相册]]></title>
      <url>%2F2017%2F03%2F02%2Fphoto%2F</url>
      <content type="text"><![CDATA[]]></content>
    </entry>

    
    <entry>
      <title><![CDATA[第一篇论文]]></title>
      <url>%2F2017%2F03%2F01%2F%E7%AC%AC%E4%B8%80%E7%AF%87%E8%AE%BA%E6%96%87%2F</url>
      <content type="text"><![CDATA[基于 word2vec 与 LVQ 的作业查重及评分系统]]></content>
    </entry>

    
    <entry>
      <title><![CDATA[The problem D of Methematical Contest 2017]]></title>
      <url>%2F2017%2F01%2F21%2FThe%20problem%20D%20of%20Methematical%20Contest%202017%2F</url>
      <content type="text"><![CDATA[Preface：The problem D of Mathematical Contest 2017 is my first try to it, and share our answer here! Contest topics：PROBLEM D: Optimizing the Passenger Throughput at an Airport Security CheckpointFollowing the terrorist attacks in the US on September 11, 2001, airport security has been significantly enhanced throughout the world. Airports have security checkpoints, where passengers and their baggage are screened for explosives and other dangerous items. The goals of these security measures are to prevent passengers from hijacking or destroying aircraft and to keep all passengers safe during their travel. However, airlines have a vested interest in maintaining a positive flying experience for passengers by minimizing the time they spend waiting in line at a security checkpoint and waiting for their flight. Therefore, there is a tension between desires to maximize security while minimizing inconvenience to passengers. During 2016, the U.S. Transportation Security Agency (TSA) came under sharp criticism for extremely long lines, in particular at Chicago’s O’Hare international airport. Following this public attention, the TSA invested in several modifications to their checkpoint equipment and procedures and increased staffing in the more highly congested airports. While these modifications were somewhat successful in reducing waiting times, it is unclear how much cost the TSA incurred to implement the new measures and increase staffing. In addition to the issues at O’Hare, there have also been incidents of unexplained and unpredicted long lines at other airports, including airports that normally have short wait times. This high variance in checkpoint lines can be extremely costly to passengers as they decide between arriving unnecessarily early or potentially missing their scheduled flight. Numerous news articles, including [1,2,3,4,5], describe some of the issues associated with airport security checkpoints. Your Internal Control Management (ICM) team has been contracted by the TSA to review airport security checkpoints and staffing to identify potential bottlenecks that disrupt passenger throughput. They are especially interested in creative solutions that both increase checkpoint throughput and reduce variance in wait time, all while maintaining the same standards of safety and security. The current process for a US airport security checkpoint is displayed in Figure 1. Zone A: o Passengers randomly arrive at the checkpoint and wait in a queue until a security officer can inspect their identification and boarding documents. Zone B: The passengers then move to a subsequent queue for an open screening line; depending on the anticipated activity level at the airport, more or less lines may be open. Once the passengers reach the front of this queue, they prepare all of their belongings for X-ray screening. Passengers must remove shoes, belts, jackets, metal objects, electronics, and containers with liquids, placing them in a bin to be X-rayed separately; laptops and some medical equipment also need to be removed from their bags and placed in a separate bin. All of their belongings, including the bins containing the aforementioned items, are moved by conveyor belt through an X-ray machine, where some items are flagged for additional search or screening by a security officer (Zone D). Meanwhile the passengers process through either a millimeter wave scanner or metal detector. Passengers that fail this step receive a pat-down inspection by a security officer (Zone D). Zone C: The passengers then proceed to the conveyor belt on the other side of the X-ray scanner to collect their belongings and depart the checkpoint area. Figure 1: Illustration of the TSA Security Screening Process. Approximately 45% of passengers enroll in a program called Pre-Check for trusted travelers. These passengers pay $85 to receive a background check and enjoy a separate screening process for five years. There is often one Pre-Check lane open for every three regular lanes, despite the fact that more passengers use the Pre-Check process. Pre-Check passengers and their bags go through the same screening process with a few modifications designed to expedite screening. Pre-Check passengers must still remove metal and electronic items for scanning as well as any liquids, but are not required to remove shoes, belts, or light jackets; they also do not need to remove their computers from their bags. Data has been collected about how passengers proceed through each step of the security screening process.Your specific tasks are: a. Develop one or more model(s) that allow(s) you to explore the flow of passengers through a security check point and identify bottlenecks. Clearly identify where problem areas exist in the current process. b. Develop two or more potential modifications to the current process to improve passenger throughput and reduce variance in wait time. Model these changes to demonstrate how your modifications impact the process. c. It is well known that different parts of the world have their own cultural norms that shape the local rules of social interaction. Consider how these cultural norms might impact your model. For example, Americans are known for deeply respecting and prioritizing the personal space of others, and there is a social stigma against “cutting” in front of others. Meanwhile, the Swiss are known for their emphasis on collective efficiency, and the Chinese are known for prioritizing individual efficiency. Consider how cultural differences may impact the way in which passenger’s process through checkpoints as a sensitivity analysis. The cultural differences you apply to your sensitivity analysis can be based on real cultural differences, or you can simulate different traveler styles that are not associated with any particular culture (e.g., a slower traveler). How can the security system accommodate these differences in a manner that expedites passenger throughput and reduces variance? d. Propose policy and procedural recommendations for the security managers based on your model. These policies may be globally applicable, or may be tailored for specific cultures and/or traveler types. In addition to developing and implementing your model(s) to address this problem, your team should validate your model(s), assess strengths and weaknesses, and propose ideas for improvement (future work). Your ICM submission should consist of a 1 page Summary Sheet and your solution cannot exceed 20 pages for a maximum of 21 pages. Note: The appendix and references do not count toward the 20 page limit. References: [1] http://www.wsj.com/articles/why-tsa-security-lines-arent-as-bad-as-youd-feared-1469032116 [2] http://www.chicagotribune.com/news/ct-tsa-airport-security-lines-met-20160823-story.html [3] http://www.cnn.com/2016/06/09/travel/tsa-security-line-wait-times-how-long/ [4] http://wgntv.com/2016/07/13/extremely-long-lines-reported-at-chicago-midway-airports-tsa-checkpoint/ [5] http://www.cnbc.com/2016/04/14/long-lines-and-missed-flights-fuel-criticism-of-tsa-screening.html Our Answer：]]></content>
    </entry>

    
    <entry>
      <title><![CDATA[Ubuntu部署Tensorflow]]></title>
      <url>%2F2016%2F11%2F14%2FUbuntu%E9%83%A8%E7%BD%B2Tensorflow%2F</url>
      <content type="text"><![CDATA[首先官方链接 官方提供了多种安装方法，下面我总结两种自己认为最方便的方法！ 1.ubuntu 安装 cpu版 tensorflow(1)首先安装pip(Mac使用easyinstall)1sudo apt-get install python-pip python-dev安装完后，最好换一下pip的源为国内源，能加快下载速度推荐豆瓣源：12345671）mkdir ~/.pip2）vi ~/.pip/pip.conf3）insert添加 [global] trusted-host = pypi.douban.com index-url = http://pypi.douban.com/simple :wq 保存退出 (2)替换源后，直接pip安装tensorflow就很快啦！1sudo pip install --upgrade tensorflow (3)安装完后，测试一下，进入python1234import tensorflow as tfhello = tf.constant('Hello, TensorFlow!')sess = tf.Session()print(sess.run(hello)) 如果没有报错则安装成功啦！ 2.ubuntu 安装 GPU版 tensorflowIf you want to enable GPU,you must install Ubuntu/Linux directly on the hard disk not virtual machine! However,the first method can run on the virtual machine.According to the website,Ubuntu/Linux 64-bit, GPU enabled, Python 2.7. Requires CUDA toolkit 7.5 and CuDNN v4.So,we should install CUDA toolkit 7.5 and CuDNN v4 or higher version! (1)uninstall raw Nvidia Driver1sudo apt-get --purge remove nvidia-*(2) download cuda from https://developer.nvidia.com/cuda-downloads TIPS:Using Thunder maybe faster! (3) turn off the light1sudo service lightdm stop (4)install cuda1sudo sh cuda_&lt;version.ID&gt;_linux.run (5)set environmental variables123echo &apos;export PATH=/usr/local/cuda-7.5/bin:$PATH&apos; &gt;&gt; ~/.bashrcecho &apos;export LD_LIBRARY_PATH=/usr/local/cuda-7.5/lib64:$LD_LIBRARY_PATH&apos; &gt;&gt; ~/.bashrcsource ~/.bashrc (6) turn on the light and reboot12sudo service lightdm startsudo reboot (7)test cuda12nvcc -V and you can see cuda version if you had successfully installed cuda. Then install cudnn(1)Download cuDNN form https://developer.nvidia.com/cudnn TIPS:Using Thunder maybe faster! (2)Uncompress and copy the cuDNN files into the toolkit directory. Assuming the toolkit is installed in /usr/local/cuda, run the following commands (edited to reflect the cuDNN version you downloaded):12345tar xvzf cudnn-8.0-linux-x64-v5.1-ga.tgzsudo cp -P cuda/include/cudnn.h /usr/local/cuda/includesudo cp -P cuda/lib64/libcudnn* /usr/local/cuda/lib64sudo chmod a+r /usr/local/cuda/include/cudnn.h /usr/local/cuda/lib64/libcudnn*cudnn不用配置环境变量 然后安装tensorflow我安装的是r0.8的，其他版本要看官网的依赖来安装cuda和cudnnflinally:1sudo pip install --upgrade https://storage.googleapis.com/tensorflow/linux/gpu/tensorflow-0.8.0-cp27-none-linux_x86_64.whl Then you can python import tensorflow to test it!1234import tensorflow as tfhello = tf.constant('Hello, TensorFlow!')sess = tf.Session()print(sess.run(hello)) Have Fun!]]></content>
    </entry>

    
    <entry>
      <title><![CDATA[两个激活码]]></title>
      <url>%2F2016%2F09%2F01%2F%E4%B8%A4%E4%B8%AA%E6%BF%80%E6%B4%BB%E7%A0%81%2F</url>
      <content type="text"><![CDATA[VS 2013 激活码BWG7X-J98B3-W34RT-33B3R-JVYW9 JetBrains系列产品 激活码http://idea.lanyus.com/]]></content>
    </entry>

    
    <entry>
      <title><![CDATA[JS书签功能]]></title>
      <url>%2F2016%2F08%2F09%2FJS%E4%B9%A6%E7%AD%BE%E5%8A%9F%E8%83%BD%2F</url>
      <content type="text"><![CDATA[很多网站都具备了利用书签按钮“一键提交”的功能，其实一点儿也不复杂，只要掌握了在收藏夹中使用js，就可以为书签工具增色 不少。(不过ie浏览器不支持，一般用浏览器插件代替) 以下例子都是将JS直接写在书签的地址栏中，以Chrome为例。 例子1：先来一个最简单的例子，只包含一个js函数： 例子11javascript:alert(document.lastModified); 点击这个书签项目，将会弹出一个提示框，显示当前网页的最后的修改时间。 例子2：修改例子21234&lt;form method="post" name="Form1"&gt; &lt;input type="text" value="sss" id="ok" name="ok" /&gt; &lt;input type="submit" value="提交" /&gt;&lt;/form&gt;收藏标签： 测试1javascript:document.Form1.ok.setAttribute('value','mei'); 例子3：引入 最普遍的是引入js文件，便于维护，也便于操作： 例子31javascript:void((function()&#123;var e=document.createElement('script');e.setAttribute('src','http://localhost/js/test.js');document.body.appendChild(e);&#125;)()) 例子4：开源一个代码 对于百度的一个问卷调查的自动提交脚本 代码如下例子12345678910111213141516171819202122232425262728293031323334353637383940414243444546474849505152535455565758596061626364656667 function fillin() &#123;var Myradio = $("div.radio-image");var Mycheckbox = $("div.checkbox-image"); //产生随机数function GetRandomNum(Min, Max) &#123; var Range = Max - Min; var Rand = Math.random(); return (Min + Math.round(Rand * Range));&#125;//填写radiovar num = GetRandomNum(0, 1);Myradio.eq(num).trigger("click"); num = GetRandomNum(2, 5);Myradio.eq(num).trigger("click"); num = GetRandomNum(6, 11);Myradio.eq(num).trigger("click"); num = GetRandomNum(12, 13);Myradio.eq(num).trigger("click"); num = GetRandomNum(14, 18);Myradio.eq(num).trigger("click"); num = GetRandomNum(19, 20);Myradio.eq(num).trigger("click"); num = GetRandomNum(21, 22);Myradio.eq(22).trigger("click"); //填写checkboxvar num1=0, num2=0;var count = 0;for (var i = 0; i &lt; 6; i++) &#123; if (GetRandomNum(0,1)) &#123; Mycheckbox.eq(i).trigger("click"); &#125;&#125;//1-2个for (var i = 7; i &lt; 11; i++) &#123; if (GetRandomNum(0, 1)) &#123; Mycheckbox.eq(i).trigger("click"); count++; &#125; if (count == 2) break;&#125;if (count == 0) Mycheckbox.eq(7).trigger("click");for (var i = 12; i &lt; 17; i++) &#123; if (GetRandomNum(0, 1)) &#123; Mycheckbox.eq(i).trigger("click"); &#125;&#125;//2个while (num1 == num2) &#123; num1 = GetRandomNum(18, 22); num2 = GetRandomNum(18, 22); &#125;Mycheckbox.eq(num1).trigger("click");Mycheckbox.eq(num2).trigger("click");$("div .survey-submit-page").trigger("click");&#125;fillin();]]></content>
    </entry>

    
    <entry>
      <title><![CDATA[Python3网络爬虫心得]]></title>
      <url>%2F2016%2F02%2F12%2FPython3%E7%BD%91%E7%BB%9C%E7%88%AC%E8%99%AB%E5%BF%83%E5%BE%97%2F</url>
      <content type="text"><![CDATA[为方便老年读者（比如我妈妈）看小说，我寒假抽空给她老人家写了一个爬小说的脚本。分享出来，大家一起学习讨论。 看过网络小说的小伙伴都知道，通过手机app（如书旗小说）看大部分小说是要收费的，我妈妈她老人家又不会在网上下载免费txt到手机上，经常下载错东西，于是我捣鼓出了这个脚本。 程序实现的功能：通过用户输入的小说名，自动在网络下载该小说到手机，避开下载垃圾软件。 以下是开发过程和源码分析： 编程语言：python3；作者：我； 为什么一定要说python3，因为网上大多数是python2的教程，我捣鼓了很久。 需要加载的库urllib(好像不用加载这个),urllib.request(网络请求),re(正则),codecs(编码)。 思路：其实一开始，我是准备爬一个小说网，比如起点中文网，但是这些小说网站的反黑客系统做的太好了，简直完美得可怕，而且有些小说网站上的小说不全，直说就是我黑不进去，于是我准备直接爬百度了，百度就是开放，什么样的鸟都有。 首先要实现搜索功能 在百度的网址(http://www.baidu.com/s?wd=) 那个等号后面加上url编码的字符串就可以实现搜索功能啦。 搜索完后，就可以把搜索后的那个界面的源码爬下来，现在我们只需言源码里的url，于是我们先将源码以utf-8(百度的编码格式)解码，再用正则表达式搜索你要的信息，这句话说起轻松，其实你需要先观察源码里url的规律再进行正则，这个不容易，再通过一个函数gethref来提取出你需要的url。 百度搜索结果的第一页会有10个搜索结果，10个url每个的解码方式不同，所以我写了一大串try：来尝试各种解码格式，然后再爬取每个url里的下载路径，同样要通过观察和正则表达式，找到下载路径就能下载啦，通过python的bif里的urllib.request.urlretrieve，实现下载和现实进度的功能，urllib.request.urlretrieve的第一个参数是需要下载的url，第二个参数是下载路径，如果没写下载路径，我也不知道会下载到哪儿去，只写下载名，可下载到这个脚本的当前目录下，最后一个参数是显示进度的。 看起来很简单吧，但是bug多多呀，大家多多反馈bug呀。目前两个缺点：1.单线程爬虫，速度慢。2.try那个地方解码速度慢，错误解码会导致速度变慢。 源码如下：源码12345678910111213141516171819202122232425262728293031323334353637383940414243444546474849505152535455565758596061626364656667686970717273# coding:utf-8import urllib.requestimport urllibimport reimport codecs##获取href的函数def gethref(booktitle): quetos_first=booktitle.find('"',booktitle.find('href')); quetos_last=booktitle.find('"',quetos_first+1); href=booktitle[quetos_first+1:quetos_last]; return(href)##显示下载进度的函数def report_hook(count, block_size, total_size): print ('%02d%%'%(100.0 * count * block_size/ total_size));##mian()keyword=input("请输入小说名:");print('正在搜索请稍等……');##模拟浏览器访问，防止百度把我当成爬虫header=&#123;'User-Agent':'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_10_5) AppleWebKit/601.4.4 (KHTML, like Gecko) Version/9.0.3 Safari/601.4.4'&#125;req=urllib.request.Request( url='http://www.baidu.com/s?wd='+urllib.request.quote(keyword+'txt下载'), headers=header );##对百度以utf-8解码，再查找有用的html=urllib.request.urlopen(req).read().decode('utf-8');allbook=re.findall('&lt;div class="result c-container "(.*?)&lt;/a&gt;&lt;/h3&gt;',html,re.S);##爱过mark=1314;for each in allbook: book=urllib.request.Request( url=gethref(each), headers=header); bookhtml=urllib.request.urlopen(book).read(); ##尝试各种解码 try: bookhtml.decode('utf-8'); download=re.findall('&lt;a(.*?)&lt;/a&gt;',bookhtml.decode('utf-8'),re.S); except: try: bookhtml.decode('gbk'); download=re.findall('&lt;a(.*?)&lt;/a&gt;',bookhtml.decode('gbk'),re.S); except: try: bookhtml.decode('gb2312'); download=re.findall('&lt;a(.*?)&lt;/a&gt;',bookhtml.decode('gb2312'),re.S); except: continue if(len(download)==0): print('抱歉，未找到该小说TAT.......'); else: for url_down in download: if(url_down.find('.txt"')!=-1 and url_down.find('href')!=-1): print('正在尝试下载........'); ## print(gethref(url_down)) try: urllib.request.urlretrieve(gethref(url_down)[:5]+urllib.request.quote(gethref(url_down)[5:]),keyword,reporthook=report_hook); mark=0; print("success"); break; except: print("下载失败"); if(mark==0): ##不约 break;if(mark): print('抱歉，未找到该小说TAT.......');]]></content>
    </entry>

    
    <entry>
      <title><![CDATA[以学生视角看笔记本电脑]]></title>
      <url>%2F2015%2F11%2F01%2F%E4%BB%A5%E5%AD%A6%E7%94%9F%E8%A7%86%E8%A7%92%E7%9C%8B%E7%AC%94%E8%AE%B0%E6%9C%AC%E7%94%B5%E8%84%91%2F</url>
      <content type="text"><![CDATA[在大学里搬了两个月的砖，帮同学们修过一些电脑，于是今天小总结一些我对这些笔记本电脑的个人看法。关于买电脑的推荐，现在写可能都晚了，但是双11要来了，想再买电脑的同学可以看看，也可以留给学弟借鉴嘛0.0。一款适合学生学习用的电脑，其实要求并不高，几乎没有要求，3000+的价位就够了，要买知名品牌哦。推荐4款我下文将会说到的品牌：华硕（ASUS）,惠普（HP），宏碁（acer），联想（Lenovo）。我用的是华硕，应该是我们寝室都用的是华硕，大力推荐哦！ 当你花了3000+买了一台笔记本后，笔记本一般会配置一个500G的机械硬盘，但机械硬盘一般会卡顿，想要解决系统卡顿的问题，你只需要再换一块固态硬盘，或者直接买带有固态硬盘的电脑。你可以买块64G的固态硬盘（200左右）来装系统，或者直接买256G的固态（500左右）来把你原来的硬盘替换掉，256G绝逼够用，而且一定比原来笔记本自带的机械硬盘快，快得飞起来！8秒开机不是问题！（PS:传送门→固态硬盘和机械硬盘的差别） 然后关于系统的问题，修修你的系统也可以解决卡顿的问题，如果你不想换硬盘，那也是可以将就用的，或者你买的就是64G的固态+500G的机械，那就修修你的系统吧。 对windows的系统总的来说，你可以这样干，现在一个安全管家，推荐腾讯的，（以腾讯电脑管家为例）打开后再找到电脑加速，找到启动项，把除显卡，声卡等驱动以外的其他启动项启动项全部禁用了；然后在服务项里，把有关打印机和蓝牙的服务项禁用掉，如果你要用蓝牙就别禁用它；在计划任务里，禁用微软改善计划和PNP(蓝牙相关项)。最后用电脑管家的一键优化，优化一下。妥妥的！还有系统提示的windows更新，一律拒绝，不要更新！别问我为什么！ 关于特定电脑的建议如下： 首先说华硕的，打开控制面板的卸载工具，或者安全管家的卸载工具。ASUS开头的就是华硕电脑自带软件，在这些软件中1.ASUS Vibe Fun Center（这个是华硕自家开发的多媒体软件，里面有在线歌曲，在线影视，在线广播，在线电子书，但绝大多数都需要收费，可卸载。） 2.ASUS Sonic Focus（这个是华硕自家开发调节播放音效的，个人感觉打开还没有关闭效果好，卸载。） 3.AI Recovery Burner（这个是用来备份系统的，个人感觉用不上。卸载。） 4.Nuance PDF Reader（这是PDF阅读器，还没有福昕好用，打开稍微大点的PDF文件画面就特卡，卸载。） 5.SmartLogonManager(这是开机面部识别软件，这个软件我觉得比较鸡肋，有开机来检测面部识别的时间，自己都已经把密码打好了，这个看个人喜好了。比较好玩。想卸就卸。) 6.e-Driver（这是华硕笔记本电脑驱动程序光盘，打开后可以选择安装【华硕自动升级软件】【PC云安全软件】，可以卸载！） 7.Splendid Utility（这是华硕的靓彩软件，调节屏幕色调的，内置四种视觉效果功能：冷色系，阳光暖，柔和，标准，还可以自定义，用处不大。可以卸载。） 8.syncables desktop SE（这是两个笔记本或者与台式机之间同步音乐、图片等资料的程序，我觉得用不着，平时谁会在两三个电脑之间来回这么折腾?就算需要，一个U盘就搞定了。可以卸载之!） 9.趋势科技（这是杀毒软件，还是收费的，卸载吧。） 10.eManual（这是笔记本使用手册，没用。自己看过一遍就可以卸载除掉了。说白了就是个笔记本使用说明书的电子文档。）11.LifeFrame（这是专为笔记本电脑内置摄影机所提供的简单易用的拍摄/录影工具，让用户可以充分利用摄影机完成拍照或是摄影等图像撷取功能。这个随便玩玩就好。没啥用，卸载吧！） 以下是不能卸载的： ATK Package(华硕笔记本的快捷键驱动 ，卸载后会导致FN键相关的功能无法使用). 2.不是ASUS开头的软件，也不是应用软件，比如里面含有USB，或者带有MicrosoftVisual C++ 的软件 千万不要卸载！！！ 然后，惠普的。3D DriveGuard：当笔记本计算机不小心跌落或突然撞到其他物体时，它可以保护笔记本计算机的内部磁盘驱动器，可以不卸。 CoolSense：智凉散热系统是惠普独家散热辅助软件，主要是用来控制机器的温度。可以卸。 HP Documentation：HP的说明文件，包含一些使用注意事项，免责声明之类的，卸卸卸! HP Launch Box:允许通过分组方式组织应用，以便快速访问Windows 7 任务栏。该软件包可为支持的笔记本电脑和操作系统的提供支持。卸卸卸! HP On Screen Display: 该实用程序支持系统在某些特性（如音量或亮度）发生更改时在屏幕上显示弹出图形。卸卸卸! HP Power Manager: 该实用程序会在笔记本电脑的当前电源设置与惠普推荐设置不匹配时通知您。可以卸载。 HP Quick Launch： 在支持的笔记本电脑上使用特殊功能键。例如，借助 HP Quick Launch（快捷键）软件，用户可以按 Fn+ESC 键查看系统信息。该软件适用于支持的操作系统。 如果没有安装此驱动,可能会出现以下现象： 1.与FN配合使用的组合功能键无法使用，常见为亮度无法调节，外接投影，显示器或者电视时FN+F4无法切换 …你自己看着办！ HP Security Assistant： 可以快捷地连接到系统中的功能或者系统中安装的软件。 HP Setup：是个HP预设的一个系统设置，卸卸卸! HP setup manager：主要是为机器更新惠普有关的驱动及软件的一款管理软件。卸卸卸! HP SimplePass PE: 该软件可以使用电脑所有者的指纹来保护身份信息和帐户访问权限。卸卸卸! HP Software Framework： 提供了一套通用的软件接口，可以集中并简化对硬件、BIOS 和 HP 设备驱动程序的访问。可以不卸。 HP Support Assistant: HPSA是一个预装在笔记本上的自助解决问题的工具。您可以进行软件更新，安装驱动，运行系统健康检测，进行故障排错，学习故障排错的技术，也可以通过聊天或者打电话的方式通过HPSA这个软件与惠普工程师联系。卸卸卸! 宏碁的：acer backup manager：备份软件，主要是备份用户的系统盘，卸卸卸！ acer crystal eye webcam：摄像头软件，算是宏基笔记本自己特有的，如果不常用可以删除 acer epower management：笔记本电源管理 ，主要是对电池的使用分情况来处理，更好的节能和延长电池的使用寿命，同时对Fn热键的屏幕提示也起到作用。别卸! acer erecovery managment：一键还原，用来还原系统，新笔记本可以用它来恢复到出厂值。与备份软件配合使用。卸卸卸！ acer registration：用来连接官网进行注册，将电池质保延长至1年。如果不注册，电池质保期是半年。卸卸卸！还有些可能每台电脑不同，其实除了power那个，其他acer开头的都可以卸载！ 联想的电脑最简单，只要是lenovo开头的自带软件，都可以卸载！当然，如果你是自己买的固态硬盘，然后自己做的系统，就不会有自带软件，就没这个烦恼咯~ 本文是个人看法，若有建议，请与我联系。]]></content>
    </entry>

    
    <entry>
      <title><![CDATA[给电商老师的作业]]></title>
      <url>%2F2015%2F10%2F25%2F%E7%BB%99%E7%94%B5%E5%95%86%E8%80%81%E5%B8%88%E7%9A%84%E4%BD%9C%E4%B8%9A%2F</url>
      <content type="text"><![CDATA[电商老师您好，虽然您自我介绍的那张PPT一晃而过，但是幸好我还是记住了您的名字，余老师。好的，我就不写废话凑字数了。这篇文章虽然是我交给您的作业，但它也是我大学的小计划。 在您的三节对EC的介绍课后，对于阿里巴巴的B2B模式，京东的B2C模式，这些全新的商业模式，我都还是懂不起。但是至少我听懂了2是to的意思，不是2B的那个意思。但至少我知道在网上购物会便宜一些，而且质量也不错。现在电子商务在我脑中的印象就是B2A，B2B，B2C，B2M这些字符串，也仅仅是字符串，当然这些影响中还有网上购物。 我不喜欢营销，不喜欢运筹学；我也不想学经济学，管理学；听说电商有很多漂亮的姑娘，但是抱歉我喜欢男的。所以综上所述，等价于&lt;=&gt;抱歉，我大二不会选择电商。 上节课，余老还讲了一些关于计算机的历史和发展，讲到了一个我非常喜欢的人——艾伦·图灵。我给余老推荐一部电影，叫《模仿游戏》（The Imitation Game），可能余老也看过。这部电影就主要讲的是二战时期，图灵去破解德军密码的故事，剧情片哦，超好看！ 说到图灵，就不得不让我想到他的图灵测试，这也是我非常喜欢的东西，因为我以后就想去研究人工智能，所以我准备大二选择CS，在此我要感谢两位计算机之父，冯·洛伊曼和艾伦·图灵。 目前，我对AI的认识不多，大半都是在电影里看到的，第一部让我爱上人工智能的电影是《钢铁侠》里面的J.A.R.V.I.S。贾维斯是自学成才的Stark先生一个人做出来的一个人工智能管家。虽然，电影里没说制作过程，但我觉得这个结果是可以实现的，只是需要我们继续研究，或者这项技术已经实现，只是不为人知，还在内测。第二部让我爱上人工智能的是电影《机械姬》，这部电影大概讲述了，爸爸创造了女儿，然后爸爸为女儿找了个男朋友来测试女儿是不是人，结果女儿太厉害，最后把爸爸杀了，把男朋友关了起来，自己走了出去，看看外面的世界去了。 《机械姬》里面大概说了一下如何实现人工智能，就是通过物联网技术，把人们打电话时的说话方式，和监视器里面记录的行为方式都记录下来，然后编码到计算机里面，让电脑也学会。但我觉得，这种方式不好，最好的方式是让电脑能够自学，要设计一个程序，让电脑有自学能力，就像一个刚出生的婴儿，因为人和计算机的不同就是，人会思考，人会自己去学习，如果能实现计算机的自学，那人工智能也能有所进步了吧，当然这都是我的愚见。 这些都是后话了，现在需要做的事就是把技术先学好，至于网络工程，我也会去大概学习一下，现在对网工不是很了解，在我印象里，网工就是去修路由器的然后顺便帮用户拉线，但物联网工程也是网工里面的，我对物联网比较感兴趣，所以也会去学习，但是前提是先把计算机科学学好。 在我看来，如果要实现我最终的目标，我要这样学，计科，网工，心理学，人类学，生物科学，电商，幸好前面三个我都比较感兴趣。 然后，大学生活的规划是，晚上早点睡，早上自然醒，幸好我自然醒的时间是7点，多读书，多看报，少吃零食，多睡觉。 感情方面的事就保密咯，顺其自然吧。 还有，余老师，我很喜欢你的讲课风格。0.0]]></content>
    </entry>

    
  
  
</search>
